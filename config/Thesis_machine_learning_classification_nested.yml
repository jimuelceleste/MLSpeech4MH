name: "Classification"
description: |
  Nested Subject-Wise Cross-Validation
  Preprocessing: PCA 
  Optimization: Bayes' Search 
  Models:
  1. SVM
  2. Random Forest
  3. XGBoost
  4. Logistic Regression
  5. MLP

metadata_config: 
  file: "metadata_cv_english.csv"
  label_col: "dx_binary"
  record_id_col: "record_id"
  subject_id_col: "subject_id"
  filename_col: "filename"

training_config:
  training__task: "classification"
  training__protocol: "nested_cross_validation"
  outer_fold__technique: "subject_wise"
  outer_fold__n_splits: 5
  outer_fold__random_state: 42
  outer_fold__shuffle: True 
  inner_fold__technique: "subject_wise"
  inner_fold__n_splits: 5
  inner_fold__random_state: 42
  inner_fold__shuffle: True
  optimization__technique: "bayes_search"
  optimization__scoring: "f1"
  evaluation__metrics: [
    "accuracy_score",
    "precision_score",
    "recall_score",
    "f1_score",
    "specificity_score",
    "sensitivity_score",
    "uar_score"
  ]

pipeline_config: 
  - unique_id: "svm_classifier"
    steps: 
      feature_scaler: "standard_scaler"
      pca: "pca"
      model: "support_vector_classifier"
    parameters:
      pca__n_components: [0.80, 0.85, 0.90]
      model__C: [0.1, 1, 10, 100]
      model__gamma: [0.0001, 0.001, 0.01, 0.1, 1, 10]
      model__kernel: ['linear', 'rbf', 'poly']

  - unique_id: "random_forest_classifier"
    steps: 
      feature_scaler: "standard_scaler"
      pca: "pca"
      model: "random_forest_classifier"
    parameters:
      pca__n_components: [0.80, 0.85, 0.90]
      model__n_estimators: [100, 300, 500, 700]
      model__max_features: [5, 15, 25, 35, 45, 55]
      model__min_samples_leaf: [1, 2, 3, 4]

  - unique_id: "logistic_regression_classifier"
    steps: 
      feature_scaler: "standard_scaler"
      pca: "pca"
      model: "logistic_regression_classifier"
    parameters:
      pca__n_components: [0.80, 0.85, 0.90]
      model__C: [
        1.00000000e-04, 2.63665090e-04, 6.95192796e-04, 1.83298071e-03,
        4.83293024e-03, 1.27427499e-02, 3.35981829e-02, 8.85866790e-02,
        2.33572147e-01, 6.15848211e-01, 1.62377674e+00, 4.28133240e+00,
        1.12883789e+01, 2.97635144e+01, 7.84759970e+01, 2.06913808e+02,
        5.45559478e+02, 1.43844989e+03, 3.79269019e+03, 1.00000000e+04
      ]
      model__penalty: ['l2']

  - unique_id: "xgb_classifier"
    steps: 
      feature_scaler: "standard_scaler"
      pca: "pca"
      model: "xgb_classifier"
    parameters:
      pca__n_components: [0.80, 0.85, 0.90]
      model__max_depth: [5, 6, 7, 8]
      model__learning_rate: [0.02, 0.05, 0.07, 0.1]
      model__n_estimators: [50, 100, 200, 500, 1000]

  - unique_id: "multilayer_perceptron_classifier"
    steps: 
      feature_scaler: "standard_scaler"
      pca: "pca"
      model: "multilayer_perceptron_classifier"
    parameters:
      pca__n_components: [0.80, 0.85, 0.90]
      model__hidden_layer_sizes: [55, 160, 160, 55]
      model__activation: ['relu']
      model__solver: ['adam']
      model__alpha: [0.0001]
      model__learning_rate: ['constant']
      model__learning_rate_init: [0.001]
      model__max_iter: [10000]